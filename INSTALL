Fribok, INSTALL file

Build requirements:
* Java SDK, version 1.6 or greater
* Apache Maven 2

The preferred way of building Fribok is using the Maven POM-file.

$ mvn assembly:assembly
[output...]

$ java -jar target/fribok-0.1-SNAPSHOT-jar-with-dependencies.jar

The above command must be run from the project root directory.

NOTE: The jasperforge.org system administrator has since some time decided that
it is a good idea if their webserver does not to give out a proper 404 MISSING
errors for missing files. Instead, they redirect to a file called 404.php and
give a 200 OK status.

This breaks our build since Maven depends on the webserver behaving
properly. Therefore you must disable the jasperreports.org maven repository
prior to building, or you will get many strange errors.

For your convenience, we have a settings file for Maven that does just that. You
can install it by simply:

$ mkdir ~/.m2
$ cp m2-settings.xml ~/.m2/settings.xml

With this in place, you should be able to build the project. If you think this
is a hassle, you are free to go to the forums over at jasperforge.org and let
them know what you think about non-compliance with standards. (Hint: It sucks.)

Other things to try:

$ mvn compile
[output...]

$ mvn test
[output...]

IntelliJ IDEA forms are used to generate parts of the GUI.  We would like to get
rid of this dependency.  For now, we recommend people to use the free software
community edition of the IDE to edit the forms.  It is available from:
http://www.jetbrains.org/

You can also generate an IntelliJ project using Maven.

$ mvn idea:idea

If you wish, you can download the sources and javadocs of deployed artifacts for
easy access inside IntelliJ.

$ mvn idea:idea -DdownloadSources=true -DdownloadJavadocs=true

If you don't wish to use Maven, you can build Fribok from inside
IntelliJ IDEA.  What follows is build instructions for IntelliJ IDEA Community
Edition.

1. Start IntelliJ IDEA.

2. Open the IntelliJ IDEA project, located in `JFS Administration.ipr'.

    IDEA will now rebuild it's index.

2. Choose the menu option `Build' -> `Make project'

3. Choose the menu option `Run' -> `Edit configurations'

4. Add a new configuration as `Application', using SSBookkeeping as main class
   and `administration' as working dir. Make sure to specify an SDK to use.

5. Run the program!

